version: "3.8"

services:
  drive:
    container_name: drive
    image: rclone/rclone:latest
    restart: unless-stopped
    #user: ${PUID:-1000}:${PGID:-1000}
    command: "mount gcrypt: /data/drive \
      --allow-other \
      --dir-cache-time 1000h \
      --log-level DEBUG \
      --log-file /logs/drive.log \
      --poll-interval 15s \
      --umask 002 \
      --user-agent rclone \
      --vfs-read-ahead 256M"
    devices: 
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - /data/config/rclone:/config/rclone
      - /data/logs/rclone:/logs
      - /data/cache/rclone:/cache
      - /data/drive:/data/drive:shared
      # - ./data/local:/data/local:shared
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/fuse.conf:/etc/fuse.conf:ro
    stdin_open: true # docker run -i
    tty: true        # docker run -t
  media:
    container_name: media
    image: hotio/mergerfs:latest
    restart: unless-stopped
    #user: ${PUID:-1000}:${PGID:-1000}
    command: "/data/local:/data/drive /data/media \
      -o rw,\
      use_ino,\
      allow_other,\
      func.getattr=newest,\
      category.action=all,\
      category.create=ff,\
      cache.files=auto-full"
    devices:
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - /data/drive:/data/drive:shared
      - /data/media:/data/media:shared
      - /data/local:/data/local:shared
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - /etc/fuse.conf:/etc/fuse.conf:ro
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    depends_on:
      - "drive"
  plex:
    image: ghcr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      #- PUID=${PUID:-1000}
      #- PGID=${PGID:-1000}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - /data/config/plex:/config
      - /data/media:/data
    #ports:
      #- "32400:32400"
    networks:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN:-traefik.me}`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=myresolver"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    restart: unless-stopped
    depends_on:
      - "media"
  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    networks:
      - reverse-proxy
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=Europe/Paris
    volumes:
      - /data/config/sonarr:/config
      - /data/media:/data
    #ports:
      #- 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN:-traefik.me}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    restart: unless-stopped
    depends_on:
      - "media"
  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      - reverse-proxy
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=Europe/Paris
    volumes:
      - /data/config/radarr:/config
      - /data/media:/data
    # ports:
    #   - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN:-traefik.me}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    restart: unless-stopped
    depends_on:
      - "media"
        
networks:
  reverse-proxy:
    external: true